{"version":3,"sources":["scripts/main.js"],"names":["ulElement","document","querySelector","employye","querySelectorAll","sordedArray","parseInteger","num","replace","sortList","list","sort","a","b","dataset","salary","htmlApruvd","innerHTML","person","insertAdjacentHTML","outerHTML"],"mappings":";AAAA,aAuBU,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBV,IAAMA,EAAYC,SAASC,cAAc,MACnCC,EAAWF,SAASG,iBAAiB,MACrCC,EAAkBF,EAAAA,GAElBG,EAAe,SAACC,GAAQ,OAACA,EAAIC,QAAQ,QAAS,KAEpD,SAASC,EAASC,GAChBA,EAAKC,KAAK,SAACC,EAAGC,GACZP,OAAAA,EAAaO,EAAEC,QAAQC,QACvBT,EAAaM,EAAEE,QAAQC,UAG3B,SAASC,IACPhB,EAAUiB,UAAY,GAEDZ,IAHD,EAGCA,EAAAA,EAAAA,GAHD,IAGc,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAvBa,IAAAA,EAAuB,EAAA,MAChClB,EAAUmB,mBAAmB,YAAaD,EAAOE,YAJ/B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAQtBX,EAASJ,GACTW","file":"main.d8ee57da.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst ulElement = document.querySelector('ul');\nconst employye = document.querySelectorAll('li');\nconst sordedArray = [...employye];\n\nconst parseInteger = (num) => +num.replace(/[$,]/g, '');\n\nfunction sortList(list) {\n  list.sort((a, b) =>\n    parseInteger(b.dataset.salary)\n  - parseInteger(a.dataset.salary));\n}\n\nfunction htmlApruvd() {\n  ulElement.innerHTML = '';\n\n  for (const person of sordedArray) {\n    ulElement.insertAdjacentHTML('beforeend', person.outerHTML);\n  }\n}\n\nsortList(sordedArray);\nhtmlApruvd();\n"]}